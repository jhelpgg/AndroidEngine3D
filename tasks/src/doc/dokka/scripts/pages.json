[{"name":"CANCELED()","description":"fr.jhelp.tasks.promise.FutureResultStatus.CANCELED","location":"tasks/fr.jhelp.tasks.promise/-future-result-status/-c-a-n-c-e-l-e-d/index.html","searchKeys":["CANCELED","CANCELED()","fr.jhelp.tasks.promise.FutureResultStatus.CANCELED"]},{"name":"COMPUTING()","description":"fr.jhelp.tasks.promise.FutureResultStatus.COMPUTING","location":"tasks/fr.jhelp.tasks.promise/-future-result-status/-c-o-m-p-u-t-i-n-g/index.html","searchKeys":["COMPUTING","COMPUTING()","fr.jhelp.tasks.promise.FutureResultStatus.COMPUTING"]},{"name":"FAILED()","description":"fr.jhelp.tasks.promise.FutureResultStatus.FAILED","location":"tasks/fr.jhelp.tasks.promise/-future-result-status/-f-a-i-l-e-d/index.html","searchKeys":["FAILED","FAILED()","fr.jhelp.tasks.promise.FutureResultStatus.FAILED"]},{"name":"HEAVY(CoroutineScope(LimitedTaskInSameTimeDispatcher(4)), Dispatchers.Default)","description":"fr.jhelp.tasks.ThreadType.HEAVY","location":"tasks/fr.jhelp.tasks/-thread-type/-h-e-a-v-y/index.html","searchKeys":["HEAVY","HEAVY(CoroutineScope(LimitedTaskInSameTimeDispatcher(4)), Dispatchers.Default)","fr.jhelp.tasks.ThreadType.HEAVY"]},{"name":"IO(CoroutineScope(LimitedTaskInSameTimeDispatcher(2)), Dispatchers.IO)","description":"fr.jhelp.tasks.ThreadType.IO","location":"tasks/fr.jhelp.tasks/-thread-type/-i-o/index.html","searchKeys":["IO","IO(CoroutineScope(LimitedTaskInSameTimeDispatcher(2)), Dispatchers.IO)","fr.jhelp.tasks.ThreadType.IO"]},{"name":"NETWORK(CoroutineScope(NetworkDispatcher), Dispatchers.Default)","description":"fr.jhelp.tasks.ThreadType.NETWORK","location":"tasks/fr.jhelp.tasks/-thread-type/-n-e-t-w-o-r-k/index.html","searchKeys":["NETWORK","NETWORK(CoroutineScope(NetworkDispatcher), Dispatchers.Default)","fr.jhelp.tasks.ThreadType.NETWORK"]},{"name":"SHORT(CoroutineScope(LimitedTaskInSameTimeDispatcher(8)), Dispatchers.Default)","description":"fr.jhelp.tasks.ThreadType.SHORT","location":"tasks/fr.jhelp.tasks/-thread-type/-s-h-o-r-t/index.html","searchKeys":["SHORT","SHORT(CoroutineScope(LimitedTaskInSameTimeDispatcher(8)), Dispatchers.Default)","fr.jhelp.tasks.ThreadType.SHORT"]},{"name":"SUCCEED()","description":"fr.jhelp.tasks.promise.FutureResultStatus.SUCCEED","location":"tasks/fr.jhelp.tasks.promise/-future-result-status/-s-u-c-c-e-e-d/index.html","searchKeys":["SUCCEED","SUCCEED()","fr.jhelp.tasks.promise.FutureResultStatus.SUCCEED"]},{"name":"UI(MainScope(), Dispatchers.Main)","description":"fr.jhelp.tasks.ThreadType.UI","location":"tasks/fr.jhelp.tasks/-thread-type/-u-i/index.html","searchKeys":["UI","UI(MainScope(), Dispatchers.Main)","fr.jhelp.tasks.ThreadType.UI"]},{"name":"abstract class Emitter<T : Any>","description":"fr.jhelp.tasks.chain.Emitter","location":"tasks/fr.jhelp.tasks.chain/-emitter/index.html","searchKeys":["Emitter","abstract class Emitter<T : Any>","fr.jhelp.tasks.chain.Emitter"]},{"name":"abstract fun cancel()","description":"fr.jhelp.tasks.Cancelable.cancel","location":"tasks/fr.jhelp.tasks/-cancelable/cancel.html","searchKeys":["cancel","abstract fun cancel()","fr.jhelp.tasks.Cancelable.cancel"]},{"name":"abstract fun next(): T?","description":"fr.jhelp.tasks.chain.Emitter.next","location":"tasks/fr.jhelp.tasks.chain/-emitter/next.html","searchKeys":["next","abstract fun next(): T?","fr.jhelp.tasks.chain.Emitter.next"]},{"name":"abstract fun receive(senderName: String, messageFor: MessageFor, message: M)","description":"fr.jhelp.tasks.post.PostUser.receive","location":"tasks/fr.jhelp.tasks.post/-post-user/receive.html","searchKeys":["receive","abstract fun receive(senderName: String, messageFor: MessageFor, message: M)","fr.jhelp.tasks.post.PostUser.receive"]},{"name":"class BooleanAtomic(initialValue: Boolean)","description":"fr.jhelp.tasks.atomics.BooleanAtomic","location":"tasks/fr.jhelp.tasks.atomics/-boolean-atomic/index.html","searchKeys":["BooleanAtomic","class BooleanAtomic(initialValue: Boolean)","fr.jhelp.tasks.atomics.BooleanAtomic"]},{"name":"class EmitterArray<T : Any>(array: Array<T>) : Emitter<T> ","description":"fr.jhelp.tasks.chain.EmitterArray","location":"tasks/fr.jhelp.tasks.chain/-emitter-array/index.html","searchKeys":["EmitterArray","class EmitterArray<T : Any>(array: Array<T>) : Emitter<T> ","fr.jhelp.tasks.chain.EmitterArray"]},{"name":"class EmitterEnumeration<T : Any>(enumeration: Enumeration<T>) : Emitter<T> ","description":"fr.jhelp.tasks.chain.EmitterEnumeration","location":"tasks/fr.jhelp.tasks.chain/-emitter-enumeration/index.html","searchKeys":["EmitterEnumeration","class EmitterEnumeration<T : Any>(enumeration: Enumeration<T>) : Emitter<T> ","fr.jhelp.tasks.chain.EmitterEnumeration"]},{"name":"class EmitterIterator<T : Any>(iterator: Iterator<T>) : Emitter<T> ","description":"fr.jhelp.tasks.chain.EmitterIterator","location":"tasks/fr.jhelp.tasks.chain/-emitter-iterator/index.html","searchKeys":["EmitterIterator","class EmitterIterator<T : Any>(iterator: Iterator<T>) : Emitter<T> ","fr.jhelp.tasks.chain.EmitterIterator"]},{"name":"class FutureResult<R : Any>","description":"fr.jhelp.tasks.promise.FutureResult","location":"tasks/fr.jhelp.tasks.promise/-future-result/index.html","searchKeys":["FutureResult","class FutureResult<R : Any>","fr.jhelp.tasks.promise.FutureResult"]},{"name":"class IntAtomic(initialValue: Int)","description":"fr.jhelp.tasks.atomics.IntAtomic","location":"tasks/fr.jhelp.tasks.atomics/-int-atomic/index.html","searchKeys":["IntAtomic","class IntAtomic(initialValue: Int)","fr.jhelp.tasks.atomics.IntAtomic"]},{"name":"class Mutex","description":"fr.jhelp.tasks.Mutex","location":"tasks/fr.jhelp.tasks/-mutex/index.html","searchKeys":["Mutex","class Mutex","fr.jhelp.tasks.Mutex"]},{"name":"class Observable<V : Any>","description":"fr.jhelp.tasks.observable.Observable","location":"tasks/fr.jhelp.tasks.observable/-observable/index.html","searchKeys":["Observable","class Observable<V : Any>","fr.jhelp.tasks.observable.Observable"]},{"name":"class ObservableValue<V : Any>(startValue: V)","description":"fr.jhelp.tasks.observable.ObservableValue","location":"tasks/fr.jhelp.tasks.observable/-observable-value/index.html","searchKeys":["ObservableValue","class ObservableValue<V : Any>(startValue: V)","fr.jhelp.tasks.observable.ObservableValue"]},{"name":"class Observer<V : Any>","description":"fr.jhelp.tasks.observable.Observer","location":"tasks/fr.jhelp.tasks.observable/-observer/index.html","searchKeys":["Observer","class Observer<V : Any>","fr.jhelp.tasks.observable.Observer"]},{"name":"class PostOffice<M>","description":"fr.jhelp.tasks.post.PostOffice","location":"tasks/fr.jhelp.tasks.post/-post-office/index.html","searchKeys":["PostOffice","class PostOffice<M>","fr.jhelp.tasks.post.PostOffice"]},{"name":"class Promise<R : Any>","description":"fr.jhelp.tasks.promise.Promise","location":"tasks/fr.jhelp.tasks.promise/-promise/index.html","searchKeys":["Promise","class Promise<R : Any>","fr.jhelp.tasks.promise.Promise"]},{"name":"class ReaderWriter(numberMaxReader: Int)","description":"fr.jhelp.tasks.ReaderWriter","location":"tasks/fr.jhelp.tasks/-reader-writer/index.html","searchKeys":["ReaderWriter","class ReaderWriter(numberMaxReader: Int)","fr.jhelp.tasks.ReaderWriter"]},{"name":"class ReferenceAtomic<T : Any>(initialValue: T)","description":"fr.jhelp.tasks.atomics.ReferenceAtomic","location":"tasks/fr.jhelp.tasks.atomics/-reference-atomic/index.html","searchKeys":["ReferenceAtomic","class ReferenceAtomic<T : Any>(initialValue: T)","fr.jhelp.tasks.atomics.ReferenceAtomic"]},{"name":"class Strand<I>(interfaceType: Class<I>, instance: I, threadType: ThreadType)","description":"fr.jhelp.tasks.strand.Strand","location":"tasks/fr.jhelp.tasks.strand/-strand/index.html","searchKeys":["Strand","class Strand<I>(interfaceType: Class<I>, instance: I, threadType: ThreadType)","fr.jhelp.tasks.strand.Strand"]},{"name":"class TaskChain<P : Any, R : Any>(threadType: ThreadType, action: (P) -> R)","description":"fr.jhelp.tasks.chain.TaskChain","location":"tasks/fr.jhelp.tasks.chain/-task-chain/index.html","searchKeys":["TaskChain","class TaskChain<P : Any, R : Any>(threadType: ThreadType, action: (P) -> R)","fr.jhelp.tasks.chain.TaskChain"]},{"name":"class TaskQueue<K, P, R>(taskCreator: (K) -> (P) -> R, parameterProvider: (K) -> P)","description":"fr.jhelp.tasks.taskQueue.TaskQueue","location":"tasks/fr.jhelp.tasks.taskQueue/-task-queue/index.html","searchKeys":["TaskQueue","class TaskQueue<K, P, R>(taskCreator: (K) -> (P) -> R, parameterProvider: (K) -> P)","fr.jhelp.tasks.taskQueue.TaskQueue"]},{"name":"data class MessageFor(privateMassage: Boolean, group: String)","description":"fr.jhelp.tasks.post.MessageFor","location":"tasks/fr.jhelp.tasks.post/-message-for/index.html","searchKeys":["MessageFor","data class MessageFor(privateMassage: Boolean, group: String)","fr.jhelp.tasks.post.MessageFor"]},{"name":"enum FutureResultStatus : Enum<FutureResultStatus> ","description":"fr.jhelp.tasks.promise.FutureResultStatus","location":"tasks/fr.jhelp.tasks.promise/-future-result-status/index.html","searchKeys":["FutureResultStatus","enum FutureResultStatus : Enum<FutureResultStatus> ","fr.jhelp.tasks.promise.FutureResultStatus"]},{"name":"enum ThreadType : Enum<ThreadType> ","description":"fr.jhelp.tasks.ThreadType","location":"tasks/fr.jhelp.tasks/-thread-type/index.html","searchKeys":["ThreadType","enum ThreadType : Enum<ThreadType> ","fr.jhelp.tasks.ThreadType"]},{"name":"fun () -> Unit.cancellable(): Cancelable","description":"fr.jhelp.tasks.cancellable","location":"tasks/fr.jhelp.tasks/cancellable.html","searchKeys":["cancellable","fun () -> Unit.cancellable(): Cancelable","fr.jhelp.tasks.cancellable"]},{"name":"fun <I> Strand(interfaceType: Class<I>, instance: I, threadType: ThreadType = ThreadType.SHORT)","description":"fr.jhelp.tasks.strand.Strand.Strand","location":"tasks/fr.jhelp.tasks.strand/-strand/-strand.html","searchKeys":["Strand","fun <I> Strand(interfaceType: Class<I>, instance: I, threadType: ThreadType = ThreadType.SHORT)","fr.jhelp.tasks.strand.Strand.Strand"]},{"name":"fun <K, P, R> TaskQueue(taskCreator: (K) -> (P) -> R, parameterProvider: (K) -> P)","description":"fr.jhelp.tasks.taskQueue.TaskQueue.TaskQueue","location":"tasks/fr.jhelp.tasks.taskQueue/-task-queue/-task-queue.html","searchKeys":["TaskQueue","fun <K, P, R> TaskQueue(taskCreator: (K) -> (P) -> R, parameterProvider: (K) -> P)","fr.jhelp.tasks.taskQueue.TaskQueue.TaskQueue"]},{"name":"fun <P : Any, R : Any> Array<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","description":"fr.jhelp.tasks.emit","location":"tasks/fr.jhelp.tasks/emit.html","searchKeys":["emit","fun <P : Any, R : Any> Array<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","fr.jhelp.tasks.emit"]},{"name":"fun <P : Any, R : Any> Enumeration<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","description":"fr.jhelp.tasks.emit","location":"tasks/fr.jhelp.tasks/emit.html","searchKeys":["emit","fun <P : Any, R : Any> Enumeration<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","fr.jhelp.tasks.emit"]},{"name":"fun <P : Any, R : Any> Iterable<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","description":"fr.jhelp.tasks.emit","location":"tasks/fr.jhelp.tasks/emit.html","searchKeys":["emit","fun <P : Any, R : Any> Iterable<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","fr.jhelp.tasks.emit"]},{"name":"fun <P : Any, R : Any> Iterator<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","description":"fr.jhelp.tasks.emit","location":"tasks/fr.jhelp.tasks/emit.html","searchKeys":["emit","fun <P : Any, R : Any> Iterator<P>.emit(taskChain: TaskChain<P, R>): FutureResult<Unit>","fr.jhelp.tasks.emit"]},{"name":"fun <P : Any, R : Any> TaskChain(threadType: ThreadType = ThreadType.SHORT, action: (P) -> R)","description":"fr.jhelp.tasks.chain.TaskChain.TaskChain","location":"tasks/fr.jhelp.tasks.chain/-task-chain/-task-chain.html","searchKeys":["TaskChain","fun <P : Any, R : Any> TaskChain(threadType: ThreadType = ThreadType.SHORT, action: (P) -> R)","fr.jhelp.tasks.chain.TaskChain.TaskChain"]},{"name":"fun <P, R : Any> (P) -> R.delay(parameter: P, milliseconds: Long): FutureResult<R>","description":"fr.jhelp.tasks.delay","location":"tasks/fr.jhelp.tasks/delay.html","searchKeys":["delay","fun <P, R : Any> (P) -> R.delay(parameter: P, milliseconds: Long): FutureResult<R>","fr.jhelp.tasks.delay"]},{"name":"fun <P, R : Any> (P) -> R.delay(threadType: ThreadType, parameter: P, milliseconds: Long): FutureResult<R>","description":"fr.jhelp.tasks.delay","location":"tasks/fr.jhelp.tasks/delay.html","searchKeys":["delay","fun <P, R : Any> (P) -> R.delay(threadType: ThreadType, parameter: P, milliseconds: Long): FutureResult<R>","fr.jhelp.tasks.delay"]},{"name":"fun <P, R : Any> (P) -> R.parallel(parameter: P): FutureResult<R>","description":"fr.jhelp.tasks.parallel","location":"tasks/fr.jhelp.tasks/parallel.html","searchKeys":["parallel","fun <P, R : Any> (P) -> R.parallel(parameter: P): FutureResult<R>","fr.jhelp.tasks.parallel"]},{"name":"fun <P, R : Any> (P) -> R.parallel(threadType: ThreadType, parameter: P): FutureResult<R>","description":"fr.jhelp.tasks.parallel","location":"tasks/fr.jhelp.tasks/parallel.html","searchKeys":["parallel","fun <P, R : Any> (P) -> R.parallel(threadType: ThreadType, parameter: P): FutureResult<R>","fr.jhelp.tasks.parallel"]},{"name":"fun <P, R : Any> delay(milliseconds: Long, parameter: P, task: (P) -> R): FutureResult<R>","description":"fr.jhelp.tasks.ThreadType.delay","location":"tasks/fr.jhelp.tasks/-thread-type/delay.html","searchKeys":["delay","fun <P, R : Any> delay(milliseconds: Long, parameter: P, task: (P) -> R): FutureResult<R>","fr.jhelp.tasks.ThreadType.delay"]},{"name":"fun <P, R : Any> parallel(parameter: P, task: (P) -> R): FutureResult<R>","description":"fr.jhelp.tasks.ThreadType.parallel","location":"tasks/fr.jhelp.tasks/-thread-type/parallel.html","searchKeys":["parallel","fun <P, R : Any> parallel(parameter: P, task: (P) -> R): FutureResult<R>","fr.jhelp.tasks.ThreadType.parallel"]},{"name":"fun <R : Any> () -> R.delay(milliseconds: Long): FutureResult<R>","description":"fr.jhelp.tasks.delay","location":"tasks/fr.jhelp.tasks/delay.html","searchKeys":["delay","fun <R : Any> () -> R.delay(milliseconds: Long): FutureResult<R>","fr.jhelp.tasks.delay"]},{"name":"fun <R : Any> () -> R.delay(threadType: ThreadType, milliseconds: Long): FutureResult<R>","description":"fr.jhelp.tasks.delay","location":"tasks/fr.jhelp.tasks/delay.html","searchKeys":["delay","fun <R : Any> () -> R.delay(threadType: ThreadType, milliseconds: Long): FutureResult<R>","fr.jhelp.tasks.delay"]},{"name":"fun <R : Any> () -> R.parallel(): FutureResult<R>","description":"fr.jhelp.tasks.parallel","location":"tasks/fr.jhelp.tasks/parallel.html","searchKeys":["parallel","fun <R : Any> () -> R.parallel(): FutureResult<R>","fr.jhelp.tasks.parallel"]},{"name":"fun <R : Any> () -> R.parallel(threadType: ThreadType): FutureResult<R>","description":"fr.jhelp.tasks.parallel","location":"tasks/fr.jhelp.tasks/parallel.html","searchKeys":["parallel","fun <R : Any> () -> R.parallel(threadType: ThreadType): FutureResult<R>","fr.jhelp.tasks.parallel"]},{"name":"fun <R : Any> FutureResult<FutureResult<R>>.unwrap(): FutureResult<R>","description":"fr.jhelp.tasks.promise.unwrap","location":"tasks/fr.jhelp.tasks.promise/unwrap.html","searchKeys":["unwrap","fun <R : Any> FutureResult<FutureResult<R>>.unwrap(): FutureResult<R>","fr.jhelp.tasks.promise.unwrap"]},{"name":"fun <R : Any> delay(milliseconds: Long, task: () -> R): FutureResult<R>","description":"fr.jhelp.tasks.ThreadType.delay","location":"tasks/fr.jhelp.tasks/-thread-type/delay.html","searchKeys":["delay","fun <R : Any> delay(milliseconds: Long, task: () -> R): FutureResult<R>","fr.jhelp.tasks.ThreadType.delay"]},{"name":"fun <R : Any> emit(taskChain: TaskChain<T, R>): FutureResult<Unit>","description":"fr.jhelp.tasks.chain.Emitter.emit","location":"tasks/fr.jhelp.tasks.chain/-emitter/emit.html","searchKeys":["emit","fun <R : Any> emit(taskChain: TaskChain<T, R>): FutureResult<Unit>","fr.jhelp.tasks.chain.Emitter.emit"]},{"name":"fun <R : Any> parallel(task: () -> R): FutureResult<R>","description":"fr.jhelp.tasks.ThreadType.parallel","location":"tasks/fr.jhelp.tasks/-thread-type/parallel.html","searchKeys":["parallel","fun <R : Any> parallel(task: () -> R): FutureResult<R>","fr.jhelp.tasks.ThreadType.parallel"]},{"name":"fun <R : Any> read(reader: () -> R): R","description":"fr.jhelp.tasks.ReaderWriter.read","location":"tasks/fr.jhelp.tasks/-reader-writer/read.html","searchKeys":["read","fun <R : Any> read(reader: () -> R): R","fr.jhelp.tasks.ReaderWriter.read"]},{"name":"fun <R : Any> write(writer: () -> R): R","description":"fr.jhelp.tasks.ReaderWriter.write","location":"tasks/fr.jhelp.tasks/-reader-writer/write.html","searchKeys":["write","fun <R : Any> write(writer: () -> R): R","fr.jhelp.tasks.ReaderWriter.write"]},{"name":"fun <R1 : Any> and(continuation: TaskChain<R, R1>): TaskChain<R, R1>","description":"fr.jhelp.tasks.chain.TaskChain.and","location":"tasks/fr.jhelp.tasks.chain/-task-chain/and.html","searchKeys":["and","fun <R1 : Any> and(continuation: TaskChain<R, R1>): TaskChain<R, R1>","fr.jhelp.tasks.chain.TaskChain.and"]},{"name":"fun <R1 : Any> and(threadType: ThreadType = ThreadType.SHORT, continuation: (R) -> R1): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.and","location":"tasks/fr.jhelp.tasks.promise/-future-result/and.html","searchKeys":["and","fun <R1 : Any> and(threadType: ThreadType = ThreadType.SHORT, continuation: (R) -> R1): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.and"]},{"name":"fun <R1 : Any> and(threadType: ThreadType = this.threadType, action: (R) -> R1): TaskChain<R, R1>","description":"fr.jhelp.tasks.chain.TaskChain.and","location":"tasks/fr.jhelp.tasks.chain/-task-chain/and.html","searchKeys":["and","fun <R1 : Any> and(threadType: ThreadType = this.threadType, action: (R) -> R1): TaskChain<R, R1>","fr.jhelp.tasks.chain.TaskChain.and"]},{"name":"fun <R1 : Any> andIf(condition: (R) -> Boolean, action: (R) -> R1): TaskChain<R, R1>","description":"fr.jhelp.tasks.chain.TaskChain.andIf","location":"tasks/fr.jhelp.tasks.chain/-task-chain/and-if.html","searchKeys":["andIf","fun <R1 : Any> andIf(condition: (R) -> Boolean, action: (R) -> R1): TaskChain<R, R1>","fr.jhelp.tasks.chain.TaskChain.andIf"]},{"name":"fun <R1 : Any> andIf(condition: (R) -> Boolean, continuation: (R) -> R1): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.andIf","location":"tasks/fr.jhelp.tasks.promise/-future-result/and-if.html","searchKeys":["andIf","fun <R1 : Any> andIf(condition: (R) -> Boolean, continuation: (R) -> R1): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.andIf"]},{"name":"fun <R1 : Any> andIf(condition: (R) -> Boolean, taskChain: TaskChain<R, R1>): TaskChain<R, R1>","description":"fr.jhelp.tasks.chain.TaskChain.andIf","location":"tasks/fr.jhelp.tasks.chain/-task-chain/and-if.html","searchKeys":["andIf","fun <R1 : Any> andIf(condition: (R) -> Boolean, taskChain: TaskChain<R, R1>): TaskChain<R, R1>","fr.jhelp.tasks.chain.TaskChain.andIf"]},{"name":"fun <R1 : Any> andIf(threadType: ThreadType, condition: (R) -> Boolean, action: (R) -> R1): TaskChain<R, R1>","description":"fr.jhelp.tasks.chain.TaskChain.andIf","location":"tasks/fr.jhelp.tasks.chain/-task-chain/and-if.html","searchKeys":["andIf","fun <R1 : Any> andIf(threadType: ThreadType, condition: (R) -> Boolean, action: (R) -> R1): TaskChain<R, R1>","fr.jhelp.tasks.chain.TaskChain.andIf"]},{"name":"fun <R1 : Any> andIf(threadType: ThreadType, condition: (R) -> Boolean, continuation: (R) -> R1): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.andIf","location":"tasks/fr.jhelp.tasks.promise/-future-result/and-if.html","searchKeys":["andIf","fun <R1 : Any> andIf(threadType: ThreadType, condition: (R) -> Boolean, continuation: (R) -> R1): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.andIf"]},{"name":"fun <R1 : Any> andIfUnwrap(condition: (R) -> Boolean, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.andIfUnwrap","location":"tasks/fr.jhelp.tasks.promise/-future-result/and-if-unwrap.html","searchKeys":["andIfUnwrap","fun <R1 : Any> andIfUnwrap(condition: (R) -> Boolean, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.andIfUnwrap"]},{"name":"fun <R1 : Any> andIfUnwrap(threadType: ThreadType, condition: (R) -> Boolean, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.andIfUnwrap","location":"tasks/fr.jhelp.tasks.promise/-future-result/and-if-unwrap.html","searchKeys":["andIfUnwrap","fun <R1 : Any> andIfUnwrap(threadType: ThreadType, condition: (R) -> Boolean, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.andIfUnwrap"]},{"name":"fun <R1 : Any> andUnwrap(threadType: ThreadType = ThreadType.SHORT, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.andUnwrap","location":"tasks/fr.jhelp.tasks.promise/-future-result/and-unwrap.html","searchKeys":["andUnwrap","fun <R1 : Any> andUnwrap(threadType: ThreadType = ThreadType.SHORT, continuation: (R) -> FutureResult<R1>): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.andUnwrap"]},{"name":"fun <R1 : Any> then(threadType: ThreadType = ThreadType.SHORT, continuation: (FutureResult<R>) -> R1): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.then","location":"tasks/fr.jhelp.tasks.promise/-future-result/then.html","searchKeys":["then","fun <R1 : Any> then(threadType: ThreadType = ThreadType.SHORT, continuation: (FutureResult<R>) -> R1): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.then"]},{"name":"fun <R1 : Any> thenUnwrap(threadType: ThreadType = ThreadType.SHORT, continuation: (FutureResult<R>) -> FutureResult<R1>): FutureResult<R1>","description":"fr.jhelp.tasks.promise.FutureResult.thenUnwrap","location":"tasks/fr.jhelp.tasks.promise/-future-result/then-unwrap.html","searchKeys":["thenUnwrap","fun <R1 : Any> thenUnwrap(threadType: ThreadType = ThreadType.SHORT, continuation: (FutureResult<R>) -> FutureResult<R1>): FutureResult<R1>","fr.jhelp.tasks.promise.FutureResult.thenUnwrap"]},{"name":"fun <T : Any> EmitterArray(array: Array<T>)","description":"fr.jhelp.tasks.chain.EmitterArray.EmitterArray","location":"tasks/fr.jhelp.tasks.chain/-emitter-array/-emitter-array.html","searchKeys":["EmitterArray","fun <T : Any> EmitterArray(array: Array<T>)","fr.jhelp.tasks.chain.EmitterArray.EmitterArray"]},{"name":"fun <T : Any> EmitterEnumeration(enumeration: Enumeration<T>)","description":"fr.jhelp.tasks.chain.EmitterEnumeration.EmitterEnumeration","location":"tasks/fr.jhelp.tasks.chain/-emitter-enumeration/-emitter-enumeration.html","searchKeys":["EmitterEnumeration","fun <T : Any> EmitterEnumeration(enumeration: Enumeration<T>)","fr.jhelp.tasks.chain.EmitterEnumeration.EmitterEnumeration"]},{"name":"fun <T : Any> EmitterIterator(iterator: Iterator<T>)","description":"fr.jhelp.tasks.chain.EmitterIterator.EmitterIterator","location":"tasks/fr.jhelp.tasks.chain/-emitter-iterator/-emitter-iterator.html","searchKeys":["EmitterIterator","fun <T : Any> EmitterIterator(iterator: Iterator<T>)","fr.jhelp.tasks.chain.EmitterIterator.EmitterIterator"]},{"name":"fun <T : Any> Exception.futureError(): FutureResult<T>","description":"fr.jhelp.tasks.promise.futureError","location":"tasks/fr.jhelp.tasks.promise/future-error.html","searchKeys":["futureError","fun <T : Any> Exception.futureError(): FutureResult<T>","fr.jhelp.tasks.promise.futureError"]},{"name":"fun <T : Any> ReferenceAtomic(initialValue: T)","description":"fr.jhelp.tasks.atomics.ReferenceAtomic.ReferenceAtomic","location":"tasks/fr.jhelp.tasks.atomics/-reference-atomic/-reference-atomic.html","searchKeys":["ReferenceAtomic","fun <T : Any> ReferenceAtomic(initialValue: T)","fr.jhelp.tasks.atomics.ReferenceAtomic.ReferenceAtomic"]},{"name":"fun <T : Any> String.futureCancel(): FutureResult<T>","description":"fr.jhelp.tasks.promise.futureCancel","location":"tasks/fr.jhelp.tasks.promise/future-cancel.html","searchKeys":["futureCancel","fun <T : Any> String.futureCancel(): FutureResult<T>","fr.jhelp.tasks.promise.futureCancel"]},{"name":"fun <T : Any> T.future(): FutureResult<T>","description":"fr.jhelp.tasks.promise.future","location":"tasks/fr.jhelp.tasks.promise/future.html","searchKeys":["future","fun <T : Any> T.future(): FutureResult<T>","fr.jhelp.tasks.promise.future"]},{"name":"fun <T : Any> atomic(initialValue: T): ReferenceAtomic<T>","description":"fr.jhelp.tasks.atomics.atomic","location":"tasks/fr.jhelp.tasks.atomics/atomic.html","searchKeys":["atomic","fun <T : Any> atomic(initialValue: T): ReferenceAtomic<T>","fr.jhelp.tasks.atomics.atomic"]},{"name":"fun <T> Array<T>.forEachAsync(threadType: ThreadType = ThreadType.SHORT, action: (T) -> Unit): FutureResult<Array<T>>","description":"fr.jhelp.tasks.forEachAsync","location":"tasks/fr.jhelp.tasks/for-each-async.html","searchKeys":["forEachAsync","fun <T> Array<T>.forEachAsync(threadType: ThreadType = ThreadType.SHORT, action: (T) -> Unit): FutureResult<Array<T>>","fr.jhelp.tasks.forEachAsync"]},{"name":"fun <T> Iterable<T>.forEachAsync(threadType: ThreadType = ThreadType.SHORT, action: (T) -> Unit): FutureResult<Iterable<T>>","description":"fr.jhelp.tasks.forEachAsync","location":"tasks/fr.jhelp.tasks/for-each-async.html","searchKeys":["forEachAsync","fun <T> Iterable<T>.forEachAsync(threadType: ThreadType = ThreadType.SHORT, action: (T) -> Unit): FutureResult<Iterable<T>>","fr.jhelp.tasks.forEachAsync"]},{"name":"fun <V : Any> ObservableValue(startValue: V)","description":"fr.jhelp.tasks.observable.ObservableValue.ObservableValue","location":"tasks/fr.jhelp.tasks.observable/-observable-value/-observable-value.html","searchKeys":["ObservableValue","fun <V : Any> ObservableValue(startValue: V)","fr.jhelp.tasks.observable.ObservableValue.ObservableValue"]},{"name":"fun BooleanAtomic(initialValue: Boolean)","description":"fr.jhelp.tasks.atomics.BooleanAtomic.BooleanAtomic","location":"tasks/fr.jhelp.tasks.atomics/-boolean-atomic/-boolean-atomic.html","searchKeys":["BooleanAtomic","fun BooleanAtomic(initialValue: Boolean)","fr.jhelp.tasks.atomics.BooleanAtomic.BooleanAtomic"]},{"name":"fun Emitter()","description":"fr.jhelp.tasks.chain.Emitter.Emitter","location":"tasks/fr.jhelp.tasks.chain/-emitter/-emitter.html","searchKeys":["Emitter","fun Emitter()","fr.jhelp.tasks.chain.Emitter.Emitter"]},{"name":"fun IntAtomic(initialValue: Int)","description":"fr.jhelp.tasks.atomics.IntAtomic.IntAtomic","location":"tasks/fr.jhelp.tasks.atomics/-int-atomic/-int-atomic.html","searchKeys":["IntAtomic","fun IntAtomic(initialValue: Int)","fr.jhelp.tasks.atomics.IntAtomic.IntAtomic"]},{"name":"fun List<FutureResult<*>>.join(): FutureResult<List<FutureResult<*>>>","description":"fr.jhelp.tasks.promise.join","location":"tasks/fr.jhelp.tasks.promise/join.html","searchKeys":["join","fun List<FutureResult<*>>.join(): FutureResult<List<FutureResult<*>>>","fr.jhelp.tasks.promise.join"]},{"name":"fun MessageFor(privateMassage: Boolean, group: String)","description":"fr.jhelp.tasks.post.MessageFor.MessageFor","location":"tasks/fr.jhelp.tasks.post/-message-for/-message-for.html","searchKeys":["MessageFor","fun MessageFor(privateMassage: Boolean, group: String)","fr.jhelp.tasks.post.MessageFor.MessageFor"]},{"name":"fun Mutex()","description":"fr.jhelp.tasks.Mutex.Mutex","location":"tasks/fr.jhelp.tasks/-mutex/-mutex.html","searchKeys":["Mutex","fun Mutex()","fr.jhelp.tasks.Mutex.Mutex"]},{"name":"fun PostOffice()","description":"fr.jhelp.tasks.post.PostOffice.PostOffice","location":"tasks/fr.jhelp.tasks.post/-post-office/-post-office.html","searchKeys":["PostOffice","fun PostOffice()","fr.jhelp.tasks.post.PostOffice.PostOffice"]},{"name":"fun Promise()","description":"fr.jhelp.tasks.promise.Promise.Promise","location":"tasks/fr.jhelp.tasks.promise/-promise/-promise.html","searchKeys":["Promise","fun Promise()","fr.jhelp.tasks.promise.Promise.Promise"]},{"name":"fun ReaderWriter(numberMaxReader: Int = 16)","description":"fr.jhelp.tasks.ReaderWriter.ReaderWriter","location":"tasks/fr.jhelp.tasks/-reader-writer/-reader-writer.html","searchKeys":["ReaderWriter","fun ReaderWriter(numberMaxReader: Int = 16)","fr.jhelp.tasks.ReaderWriter.ReaderWriter"]},{"name":"fun atomic(initialValue: Boolean): BooleanAtomic","description":"fr.jhelp.tasks.atomics.atomic","location":"tasks/fr.jhelp.tasks.atomics/atomic.html","searchKeys":["atomic","fun atomic(initialValue: Boolean): BooleanAtomic","fr.jhelp.tasks.atomics.atomic"]},{"name":"fun atomic(initialValue: Int): IntAtomic","description":"fr.jhelp.tasks.atomics.atomic","location":"tasks/fr.jhelp.tasks.atomics/atomic.html","searchKeys":["atomic","fun atomic(initialValue: Int): IntAtomic","fr.jhelp.tasks.atomics.atomic"]},{"name":"fun cancel(reason: String): Boolean","description":"fr.jhelp.tasks.promise.FutureResult.cancel","location":"tasks/fr.jhelp.tasks.promise/-future-result/cancel.html","searchKeys":["cancel","fun cancel(reason: String): Boolean","fr.jhelp.tasks.promise.FutureResult.cancel"]},{"name":"fun cancelReason(): String?","description":"fr.jhelp.tasks.promise.FutureResult.cancelReason","location":"tasks/fr.jhelp.tasks.promise/-future-result/cancel-reason.html","searchKeys":["cancelReason","fun cancelReason(): String?","fr.jhelp.tasks.promise.FutureResult.cancelReason"]},{"name":"fun destroy(context: Context)","description":"fr.jhelp.tasks.network.NetworkStatusManager.destroy","location":"tasks/fr.jhelp.tasks.network/-network-status-manager/destroy.html","searchKeys":["destroy","fun destroy(context: Context)","fr.jhelp.tasks.network.NetworkStatusManager.destroy"]},{"name":"fun emit(parameter: P): FutureResult<R>","description":"fr.jhelp.tasks.chain.TaskChain.emit","location":"tasks/fr.jhelp.tasks.chain/-task-chain/emit.html","searchKeys":["emit","fun emit(parameter: P): FutureResult<R>","fr.jhelp.tasks.chain.TaskChain.emit"]},{"name":"fun enqueue(key: K)","description":"fr.jhelp.tasks.taskQueue.TaskQueue.enqueue","location":"tasks/fr.jhelp.tasks.taskQueue/-task-queue/enqueue.html","searchKeys":["enqueue","fun enqueue(key: K)","fr.jhelp.tasks.taskQueue.TaskQueue.enqueue"]},{"name":"fun error(): Exception?","description":"fr.jhelp.tasks.promise.FutureResult.error","location":"tasks/fr.jhelp.tasks.promise/-future-result/error.html","searchKeys":["error","fun error(): Exception?","fr.jhelp.tasks.promise.FutureResult.error"]},{"name":"fun error(error: Exception)","description":"fr.jhelp.tasks.promise.Promise.error","location":"tasks/fr.jhelp.tasks.promise/-promise/error.html","searchKeys":["error","fun error(error: Exception)","fr.jhelp.tasks.promise.Promise.error"]},{"name":"fun groupExists(groupName: String): Boolean","description":"fr.jhelp.tasks.post.PostOffice.groupExists","location":"tasks/fr.jhelp.tasks.post/-post-office/group-exists.html","searchKeys":["groupExists","fun groupExists(groupName: String): Boolean","fr.jhelp.tasks.post.PostOffice.groupExists"]},{"name":"fun initialize(context: Context)","description":"fr.jhelp.tasks.network.NetworkStatusManager.initialize","location":"tasks/fr.jhelp.tasks.network/-network-status-manager/initialize.html","searchKeys":["initialize","fun initialize(context: Context)","fr.jhelp.tasks.network.NetworkStatusManager.initialize"]},{"name":"fun observedBy(task: (V) -> Unit): Observer<V>","description":"fr.jhelp.tasks.observable.Observable.observedBy","location":"tasks/fr.jhelp.tasks.observable/-observable/observed-by.html","searchKeys":["observedBy","fun observedBy(task: (V) -> Unit): Observer<V>","fr.jhelp.tasks.observable.Observable.observedBy"]},{"name":"fun observedBy(threadType: ThreadType, task: (V) -> Unit): Observer<V>","description":"fr.jhelp.tasks.observable.Observable.observedBy","location":"tasks/fr.jhelp.tasks.observable/-observable/observed-by.html","searchKeys":["observedBy","fun observedBy(threadType: ThreadType, task: (V) -> Unit): Observer<V>","fr.jhelp.tasks.observable.Observable.observedBy"]},{"name":"fun onCancel(threadType: ThreadType = ThreadType.SHORT, cancelListener: (String) -> Unit): FutureResult<R>","description":"fr.jhelp.tasks.promise.FutureResult.onCancel","location":"tasks/fr.jhelp.tasks.promise/-future-result/on-cancel.html","searchKeys":["onCancel","fun onCancel(threadType: ThreadType = ThreadType.SHORT, cancelListener: (String) -> Unit): FutureResult<R>","fr.jhelp.tasks.promise.FutureResult.onCancel"]},{"name":"fun onError(threadType: ThreadType = ThreadType.SHORT, errorListener: (Exception) -> Unit): FutureResult<R>","description":"fr.jhelp.tasks.promise.FutureResult.onError","location":"tasks/fr.jhelp.tasks.promise/-future-result/on-error.html","searchKeys":["onError","fun onError(threadType: ThreadType = ThreadType.SHORT, errorListener: (Exception) -> Unit): FutureResult<R>","fr.jhelp.tasks.promise.FutureResult.onError"]},{"name":"fun register(cancelListener: (String) -> Unit)","description":"fr.jhelp.tasks.promise.Promise.register","location":"tasks/fr.jhelp.tasks.promise/-promise/register.html","searchKeys":["register","fun register(cancelListener: (String) -> Unit)","fr.jhelp.tasks.promise.Promise.register"]},{"name":"fun register(threadType: ThreadType = ThreadType.SHORT, listener: (FutureResult<R>) -> Unit)","description":"fr.jhelp.tasks.promise.FutureResult.register","location":"tasks/fr.jhelp.tasks.promise/-future-result/register.html","searchKeys":["register","fun register(threadType: ThreadType = ThreadType.SHORT, listener: (FutureResult<R>) -> Unit)","fr.jhelp.tasks.promise.FutureResult.register"]},{"name":"fun registerToGroup(groupName: String, postUser: PostUser<M>)","description":"fr.jhelp.tasks.post.PostOffice.registerToGroup","location":"tasks/fr.jhelp.tasks.post/-post-office/register-to-group.html","searchKeys":["registerToGroup","fun registerToGroup(groupName: String, postUser: PostUser<M>)","fr.jhelp.tasks.post.PostOffice.registerToGroup"]},{"name":"fun registerUser(userName: String, postUser: PostUser<M>): Boolean","description":"fr.jhelp.tasks.post.PostOffice.registerUser","location":"tasks/fr.jhelp.tasks.post/-post-office/register-user.html","searchKeys":["registerUser","fun registerUser(userName: String, postUser: PostUser<M>): Boolean","fr.jhelp.tasks.post.PostOffice.registerUser"]},{"name":"fun result(result: R)","description":"fr.jhelp.tasks.promise.Promise.result","location":"tasks/fr.jhelp.tasks.promise/-promise/result.html","searchKeys":["result","fun result(result: R)","fr.jhelp.tasks.promise.Promise.result"]},{"name":"fun status(): FutureResultStatus","description":"fr.jhelp.tasks.promise.FutureResult.status","location":"tasks/fr.jhelp.tasks.promise/-future-result/status.html","searchKeys":["status","fun status(): FutureResultStatus","fr.jhelp.tasks.promise.FutureResult.status"]},{"name":"fun stopObserve()","description":"fr.jhelp.tasks.observable.Observer.stopObserve","location":"tasks/fr.jhelp.tasks.observable/-observer/stop-observe.html","searchKeys":["stopObserve","fun stopObserve()","fr.jhelp.tasks.observable.Observer.stopObserve"]},{"name":"fun unregisterFromAllGroups(postUser: PostUser<M>)","description":"fr.jhelp.tasks.post.PostOffice.unregisterFromAllGroups","location":"tasks/fr.jhelp.tasks.post/-post-office/unregister-from-all-groups.html","searchKeys":["unregisterFromAllGroups","fun unregisterFromAllGroups(postUser: PostUser<M>)","fr.jhelp.tasks.post.PostOffice.unregisterFromAllGroups"]},{"name":"fun unregisterFromGroup(groupName: String, postUser: PostUser<M>)","description":"fr.jhelp.tasks.post.PostOffice.unregisterFromGroup","location":"tasks/fr.jhelp.tasks.post/-post-office/unregister-from-group.html","searchKeys":["unregisterFromGroup","fun unregisterFromGroup(groupName: String, postUser: PostUser<M>)","fr.jhelp.tasks.post.PostOffice.unregisterFromGroup"]},{"name":"fun userExists(userName: String): Boolean","description":"fr.jhelp.tasks.post.PostOffice.userExists","location":"tasks/fr.jhelp.tasks.post/-post-office/user-exists.html","searchKeys":["userExists","fun userExists(userName: String): Boolean","fr.jhelp.tasks.post.PostOffice.userExists"]},{"name":"fun waitComplete(): FutureResultStatus","description":"fr.jhelp.tasks.promise.FutureResult.waitComplete","location":"tasks/fr.jhelp.tasks.promise/-future-result/wait-complete.html","searchKeys":["waitComplete","fun waitComplete(): FutureResultStatus","fr.jhelp.tasks.promise.FutureResult.waitComplete"]},{"name":"interface Cancelable","description":"fr.jhelp.tasks.Cancelable","location":"tasks/fr.jhelp.tasks/-cancelable/index.html","searchKeys":["Cancelable","interface Cancelable","fr.jhelp.tasks.Cancelable"]},{"name":"interface PostUser<M>","description":"fr.jhelp.tasks.post.PostUser","location":"tasks/fr.jhelp.tasks.post/-post-user/index.html","searchKeys":["PostUser","interface PostUser<M>","fr.jhelp.tasks.post.PostUser"]},{"name":"object NetworkStatusManager","description":"fr.jhelp.tasks.network.NetworkStatusManager","location":"tasks/fr.jhelp.tasks.network/-network-status-manager/index.html","searchKeys":["NetworkStatusManager","object NetworkStatusManager","fr.jhelp.tasks.network.NetworkStatusManager"]},{"name":"open fun toGroup(groupName: String, postOffice: PostOffice<M>, message: M): Boolean","description":"fr.jhelp.tasks.post.PostUser.toGroup","location":"tasks/fr.jhelp.tasks.post/-post-user/to-group.html","searchKeys":["toGroup","open fun toGroup(groupName: String, postOffice: PostOffice<M>, message: M): Boolean","fr.jhelp.tasks.post.PostUser.toGroup"]},{"name":"open fun toUser(userName: String, postOffice: PostOffice<M>, message: M): Boolean","description":"fr.jhelp.tasks.post.PostUser.toUser","location":"tasks/fr.jhelp.tasks.post/-post-user/to-user.html","searchKeys":["toUser","open fun toUser(userName: String, postOffice: PostOffice<M>, message: M): Boolean","fr.jhelp.tasks.post.PostUser.toUser"]},{"name":"open override fun next(): T?","description":"fr.jhelp.tasks.chain.EmitterArray.next","location":"tasks/fr.jhelp.tasks.chain/-emitter-array/next.html","searchKeys":["next","open override fun next(): T?","fr.jhelp.tasks.chain.EmitterArray.next"]},{"name":"open override fun next(): T?","description":"fr.jhelp.tasks.chain.EmitterEnumeration.next","location":"tasks/fr.jhelp.tasks.chain/-emitter-enumeration/next.html","searchKeys":["next","open override fun next(): T?","fr.jhelp.tasks.chain.EmitterEnumeration.next"]},{"name":"open override fun next(): T?","description":"fr.jhelp.tasks.chain.EmitterIterator.next","location":"tasks/fr.jhelp.tasks.chain/-emitter-iterator/next.html","searchKeys":["next","open override fun next(): T?","fr.jhelp.tasks.chain.EmitterIterator.next"]},{"name":"open override fun toString(): String","description":"fr.jhelp.tasks.promise.FutureResult.toString","location":"tasks/fr.jhelp.tasks.promise/-future-result/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.tasks.promise.FutureResult.toString"]},{"name":"operator fun <R : Any> invoke(task: () -> R): R","description":"fr.jhelp.tasks.Mutex.invoke","location":"tasks/fr.jhelp.tasks/-mutex/invoke.html","searchKeys":["invoke","operator fun <R : Any> invoke(task: () -> R): R","fr.jhelp.tasks.Mutex.invoke"]},{"name":"operator fun getValue(thisRef: Any, property: KProperty<*>): Boolean","description":"fr.jhelp.tasks.atomics.BooleanAtomic.getValue","location":"tasks/fr.jhelp.tasks.atomics/-boolean-atomic/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any, property: KProperty<*>): Boolean","fr.jhelp.tasks.atomics.BooleanAtomic.getValue"]},{"name":"operator fun getValue(thisRef: Any, property: KProperty<*>): Int","description":"fr.jhelp.tasks.atomics.IntAtomic.getValue","location":"tasks/fr.jhelp.tasks.atomics/-int-atomic/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any, property: KProperty<*>): Int","fr.jhelp.tasks.atomics.IntAtomic.getValue"]},{"name":"operator fun getValue(thisRef: Any, property: KProperty<*>): T","description":"fr.jhelp.tasks.atomics.ReferenceAtomic.getValue","location":"tasks/fr.jhelp.tasks.atomics/-reference-atomic/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any, property: KProperty<*>): T","fr.jhelp.tasks.atomics.ReferenceAtomic.getValue"]},{"name":"operator fun invoke(): I","description":"fr.jhelp.tasks.strand.Strand.invoke","location":"tasks/fr.jhelp.tasks.strand/-strand/invoke.html","searchKeys":["invoke","operator fun invoke(): I","fr.jhelp.tasks.strand.Strand.invoke"]},{"name":"operator fun invoke(): R","description":"fr.jhelp.tasks.promise.FutureResult.invoke","location":"tasks/fr.jhelp.tasks.promise/-future-result/invoke.html","searchKeys":["invoke","operator fun invoke(): R","fr.jhelp.tasks.promise.FutureResult.invoke"]},{"name":"operator fun setValue(thisRef: Any, property: KProperty<*>, value: Boolean)","description":"fr.jhelp.tasks.atomics.BooleanAtomic.setValue","location":"tasks/fr.jhelp.tasks.atomics/-boolean-atomic/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any, property: KProperty<*>, value: Boolean)","fr.jhelp.tasks.atomics.BooleanAtomic.setValue"]},{"name":"operator fun setValue(thisRef: Any, property: KProperty<*>, value: Int)","description":"fr.jhelp.tasks.atomics.IntAtomic.setValue","location":"tasks/fr.jhelp.tasks.atomics/-int-atomic/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any, property: KProperty<*>, value: Int)","fr.jhelp.tasks.atomics.IntAtomic.setValue"]},{"name":"operator fun setValue(thisRef: Any, property: KProperty<*>, value: T)","description":"fr.jhelp.tasks.atomics.ReferenceAtomic.setValue","location":"tasks/fr.jhelp.tasks.atomics/-reference-atomic/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any, property: KProperty<*>, value: T)","fr.jhelp.tasks.atomics.ReferenceAtomic.setValue"]},{"name":"val future: FutureResult<R>","description":"fr.jhelp.tasks.promise.Promise.future","location":"tasks/fr.jhelp.tasks.promise/-promise/future.html","searchKeys":["future","val future: FutureResult<R>","fr.jhelp.tasks.promise.Promise.future"]},{"name":"val group: String","description":"fr.jhelp.tasks.post.MessageFor.group","location":"tasks/fr.jhelp.tasks.post/-message-for/group.html","searchKeys":["group","val group: String","fr.jhelp.tasks.post.MessageFor.group"]},{"name":"val groupsSet: Set<String>","description":"fr.jhelp.tasks.post.PostOffice.groupsSet","location":"tasks/fr.jhelp.tasks.post/-post-office/groups-set.html","searchKeys":["groupsSet","val groupsSet: Set<String>","fr.jhelp.tasks.post.PostOffice.groupsSet"]},{"name":"val observable: Observable<V>","description":"fr.jhelp.tasks.observable.ObservableValue.observable","location":"tasks/fr.jhelp.tasks.observable/-observable-value/observable.html","searchKeys":["observable","val observable: Observable<V>","fr.jhelp.tasks.observable.ObservableValue.observable"]},{"name":"val observeObservable: Observable<Boolean>","description":"fr.jhelp.tasks.observable.Observer.observeObservable","location":"tasks/fr.jhelp.tasks.observable/-observer/observe-observable.html","searchKeys":["observeObservable","val observeObservable: Observable<Boolean>","fr.jhelp.tasks.observable.Observer.observeObservable"]},{"name":"val privateMassage: Boolean","description":"fr.jhelp.tasks.post.MessageFor.privateMassage","location":"tasks/fr.jhelp.tasks.post/-message-for/private-massage.html","searchKeys":["privateMassage","val privateMassage: Boolean","fr.jhelp.tasks.post.MessageFor.privateMassage"]},{"name":"val usersSet: Set<String>","description":"fr.jhelp.tasks.post.PostOffice.usersSet","location":"tasks/fr.jhelp.tasks.post/-post-office/users-set.html","searchKeys":["usersSet","val usersSet: Set<String>","fr.jhelp.tasks.post.PostOffice.usersSet"]},{"name":"val value: V","description":"fr.jhelp.tasks.observable.Observable.value","location":"tasks/fr.jhelp.tasks.observable/-observable/value.html","searchKeys":["value","val value: V","fr.jhelp.tasks.observable.Observable.value"]},{"name":"var canceled: Boolean = false","description":"fr.jhelp.tasks.promise.Promise.canceled","location":"tasks/fr.jhelp.tasks.promise/-promise/canceled.html","searchKeys":["canceled","var canceled: Boolean = false","fr.jhelp.tasks.promise.Promise.canceled"]},{"name":"var value: V","description":"fr.jhelp.tasks.observable.ObservableValue.value","location":"tasks/fr.jhelp.tasks.observable/-observable-value/value.html","searchKeys":["value","var value: V","fr.jhelp.tasks.observable.ObservableValue.value"]}]
