[{"name":"class ArrayInt(initialSize: Int) : Iterable<Int> ","description":"fr.jhelp.lists.ArrayInt","location":"lists/fr.jhelp.lists/-array-int/index.html","searchKeys":["ArrayInt","class ArrayInt(initialSize: Int) : Iterable<Int> ","fr.jhelp.lists.ArrayInt"]},{"name":"class BTree<T>(comparator: Comparator<T>)","description":"fr.jhelp.lists.BTree","location":"lists/fr.jhelp.lists/-b-tree/index.html","searchKeys":["BTree","class BTree<T>(comparator: Comparator<T>)","fr.jhelp.lists.BTree"]},{"name":"class ComparableMap<K : Comparable<K>, V> : Iterable<Pair<K, V>> ","description":"fr.jhelp.lists.ComparableMap","location":"lists/fr.jhelp.lists/-comparable-map/index.html","searchKeys":["ComparableMap","class ComparableMap<K : Comparable<K>, V> : Iterable<Pair<K, V>> ","fr.jhelp.lists.ComparableMap"]},{"name":"class EnumerationIteratorInt : Enumeration<Int> , Iterator<Int> ","description":"fr.jhelp.lists.EnumerationIteratorInt","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/index.html","searchKeys":["EnumerationIteratorInt","class EnumerationIteratorInt : Enumeration<Int> , Iterator<Int> ","fr.jhelp.lists.EnumerationIteratorInt"]},{"name":"class FilteredIterable<T : Any>(iterable: Iterable<T>, filter: (T) -> Boolean) : Iterable<T> ","description":"fr.jhelp.lists.FilteredIterable","location":"lists/fr.jhelp.lists/-filtered-iterable/index.html","searchKeys":["FilteredIterable","class FilteredIterable<T : Any>(iterable: Iterable<T>, filter: (T) -> Boolean) : Iterable<T> ","fr.jhelp.lists.FilteredIterable"]},{"name":"class FilteredIterator<T : Any>(iterator: Iterator<T>, filter: (T) -> Boolean) : Iterator<T> ","description":"fr.jhelp.lists.FilteredIterator","location":"lists/fr.jhelp.lists/-filtered-iterator/index.html","searchKeys":["FilteredIterator","class FilteredIterator<T : Any>(iterator: Iterator<T>, filter: (T) -> Boolean) : Iterator<T> ","fr.jhelp.lists.FilteredIterator"]},{"name":"class LinkedArray<T>","description":"fr.jhelp.lists.LinkedArray","location":"lists/fr.jhelp.lists/-linked-array/index.html","searchKeys":["LinkedArray","class LinkedArray<T>","fr.jhelp.lists.LinkedArray"]},{"name":"class NaturalComparator<C : Comparable<C>> : Comparator<C> ","description":"fr.jhelp.lists.NaturalComparator","location":"lists/fr.jhelp.lists/-natural-comparator/index.html","searchKeys":["NaturalComparator","class NaturalComparator<C : Comparable<C>> : Comparator<C> ","fr.jhelp.lists.NaturalComparator"]},{"name":"class Queue<T> : Iterable<T> ","description":"fr.jhelp.lists.Queue","location":"lists/fr.jhelp.lists/-queue/index.html","searchKeys":["Queue","class Queue<T> : Iterable<T> ","fr.jhelp.lists.Queue"]},{"name":"class SortedArray<T>(comparator: Comparator<T>, unique: Boolean) : Iterable<T> ","description":"fr.jhelp.lists.SortedArray","location":"lists/fr.jhelp.lists/-sorted-array/index.html","searchKeys":["SortedArray","class SortedArray<T>(comparator: Comparator<T>, unique: Boolean) : Iterable<T> ","fr.jhelp.lists.SortedArray"]},{"name":"class TransformedIterable<P, R>(iterable: Iterable<P>, action: (P) -> R) : Iterable<R> ","description":"fr.jhelp.lists.TransformedIterable","location":"lists/fr.jhelp.lists/-transformed-iterable/index.html","searchKeys":["TransformedIterable","class TransformedIterable<P, R>(iterable: Iterable<P>, action: (P) -> R) : Iterable<R> ","fr.jhelp.lists.TransformedIterable"]},{"name":"class TransformedIterator<P, R>(iterator: Iterator<P>, action: (P) -> R) : Iterator<R> ","description":"fr.jhelp.lists.TransformedIterator","location":"lists/fr.jhelp.lists/-transformed-iterator/index.html","searchKeys":["TransformedIterator","class TransformedIterator<P, R>(iterator: Iterator<P>, action: (P) -> R) : Iterator<R> ","fr.jhelp.lists.TransformedIterator"]},{"name":"fun <C : Comparable<C>> bTree(): BTree<C>","description":"fr.jhelp.lists.bTree","location":"lists/fr.jhelp.lists/b-tree.html","searchKeys":["bTree","fun <C : Comparable<C>> bTree(): BTree<C>","fr.jhelp.lists.bTree"]},{"name":"fun <C : Comparable<C>> sortedArray(unique: Boolean = false): SortedArray<C>","description":"fr.jhelp.lists.sortedArray","location":"lists/fr.jhelp.lists/sorted-array.html","searchKeys":["sortedArray","fun <C : Comparable<C>> sortedArray(unique: Boolean = false): SortedArray<C>","fr.jhelp.lists.sortedArray"]},{"name":"fun <P, R> Iterable<P>.transform(action: (P) -> R): Iterable<R>","description":"fr.jhelp.lists.transform","location":"lists/fr.jhelp.lists/transform.html","searchKeys":["transform","fun <P, R> Iterable<P>.transform(action: (P) -> R): Iterable<R>","fr.jhelp.lists.transform"]},{"name":"fun <P, R> Iterator<P>.transform(action: (P) -> R): Iterator<R>","description":"fr.jhelp.lists.transform","location":"lists/fr.jhelp.lists/transform.html","searchKeys":["transform","fun <P, R> Iterator<P>.transform(action: (P) -> R): Iterator<R>","fr.jhelp.lists.transform"]},{"name":"fun <P, R> TransformedIterable(iterable: Iterable<P>, action: (P) -> R)","description":"fr.jhelp.lists.TransformedIterable.TransformedIterable","location":"lists/fr.jhelp.lists/-transformed-iterable/-transformed-iterable.html","searchKeys":["TransformedIterable","fun <P, R> TransformedIterable(iterable: Iterable<P>, action: (P) -> R)","fr.jhelp.lists.TransformedIterable.TransformedIterable"]},{"name":"fun <P, R> TransformedIterator(iterator: Iterator<P>, action: (P) -> R)","description":"fr.jhelp.lists.TransformedIterator.TransformedIterator","location":"lists/fr.jhelp.lists/-transformed-iterator/-transformed-iterator.html","searchKeys":["TransformedIterator","fun <P, R> TransformedIterator(iterator: Iterator<P>, action: (P) -> R)","fr.jhelp.lists.TransformedIterator.TransformedIterator"]},{"name":"fun <T : Any> FilteredIterable(iterable: Iterable<T>, filter: (T) -> Boolean)","description":"fr.jhelp.lists.FilteredIterable.FilteredIterable","location":"lists/fr.jhelp.lists/-filtered-iterable/-filtered-iterable.html","searchKeys":["FilteredIterable","fun <T : Any> FilteredIterable(iterable: Iterable<T>, filter: (T) -> Boolean)","fr.jhelp.lists.FilteredIterable.FilteredIterable"]},{"name":"fun <T : Any> FilteredIterator(iterator: Iterator<T>, filter: (T) -> Boolean)","description":"fr.jhelp.lists.FilteredIterator.FilteredIterator","location":"lists/fr.jhelp.lists/-filtered-iterator/-filtered-iterator.html","searchKeys":["FilteredIterator","fun <T : Any> FilteredIterator(iterator: Iterator<T>, filter: (T) -> Boolean)","fr.jhelp.lists.FilteredIterator.FilteredIterator"]},{"name":"fun <T : Any> Iterable<T>.smartFilter(filter: (T) -> Boolean): Iterable<T>","description":"fr.jhelp.lists.smartFilter","location":"lists/fr.jhelp.lists/smart-filter.html","searchKeys":["smartFilter","fun <T : Any> Iterable<T>.smartFilter(filter: (T) -> Boolean): Iterable<T>","fr.jhelp.lists.smartFilter"]},{"name":"fun <T : Any> Iterator<T>.smartFilter(filter: (T) -> Boolean): Iterator<T>","description":"fr.jhelp.lists.smartFilter","location":"lists/fr.jhelp.lists/smart-filter.html","searchKeys":["smartFilter","fun <T : Any> Iterator<T>.smartFilter(filter: (T) -> Boolean): Iterator<T>","fr.jhelp.lists.smartFilter"]},{"name":"fun <T> alwaysFalse(): (T) -> Boolean","description":"fr.jhelp.lists.alwaysFalse","location":"lists/fr.jhelp.lists/always-false.html","searchKeys":["alwaysFalse","fun <T> alwaysFalse(): (T) -> Boolean","fr.jhelp.lists.alwaysFalse"]},{"name":"fun <T> alwaysTrue(): (T) -> Boolean","description":"fr.jhelp.lists.alwaysTrue","location":"lists/fr.jhelp.lists/always-true.html","searchKeys":["alwaysTrue","fun <T> alwaysTrue(): (T) -> Boolean","fr.jhelp.lists.alwaysTrue"]},{"name":"fun <T> emptyLinkedArray(): LinkedArray<T>","description":"fr.jhelp.lists.emptyLinkedArray","location":"lists/fr.jhelp.lists/empty-linked-array.html","searchKeys":["emptyLinkedArray","fun <T> emptyLinkedArray(): LinkedArray<T>","fr.jhelp.lists.emptyLinkedArray"]},{"name":"fun <T> linkedArrayOf(vararg elements: T): LinkedArray<T>","description":"fr.jhelp.lists.linkedArrayOf","location":"lists/fr.jhelp.lists/linked-array-of.html","searchKeys":["linkedArrayOf","fun <T> linkedArrayOf(vararg elements: T): LinkedArray<T>","fr.jhelp.lists.linkedArrayOf"]},{"name":"fun <T> visitorCollector(condition: (T) -> Boolean, collector: (T) -> Unit): (T) -> Boolean","description":"fr.jhelp.lists.visitorCollector","location":"lists/fr.jhelp.lists/visitor-collector.html","searchKeys":["visitorCollector","fun <T> visitorCollector(condition: (T) -> Boolean, collector: (T) -> Unit): (T) -> Boolean","fr.jhelp.lists.visitorCollector"]},{"name":"fun <T> visitorSearch(condition: (T) -> Boolean, collector: (T) -> Unit): (T) -> Boolean","description":"fr.jhelp.lists.visitorSearch","location":"lists/fr.jhelp.lists/visitor-search.html","searchKeys":["visitorSearch","fun <T> visitorSearch(condition: (T) -> Boolean, collector: (T) -> Unit): (T) -> Boolean","fr.jhelp.lists.visitorSearch"]},{"name":"fun ArrayInt(initialSize: Int = 128)","description":"fr.jhelp.lists.ArrayInt.ArrayInt","location":"lists/fr.jhelp.lists/-array-int/-array-int.html","searchKeys":["ArrayInt","fun ArrayInt(initialSize: Int = 128)","fr.jhelp.lists.ArrayInt.ArrayInt"]},{"name":"fun BTree(comparator: Comparator<T>)","description":"fr.jhelp.lists.BTree.BTree","location":"lists/fr.jhelp.lists/-b-tree/-b-tree.html","searchKeys":["BTree","fun BTree(comparator: Comparator<T>)","fr.jhelp.lists.BTree.BTree"]},{"name":"fun ComparableMap()","description":"fr.jhelp.lists.ComparableMap.ComparableMap","location":"lists/fr.jhelp.lists/-comparable-map/-comparable-map.html","searchKeys":["ComparableMap","fun ComparableMap()","fr.jhelp.lists.ComparableMap.ComparableMap"]},{"name":"fun EnumerationIteratorInt(array: IntArray)","description":"fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/-enumeration-iterator-int.html","searchKeys":["EnumerationIteratorInt","fun EnumerationIteratorInt(array: IntArray)","fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt"]},{"name":"fun EnumerationIteratorInt(enumeration: Enumeration<Int>)","description":"fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/-enumeration-iterator-int.html","searchKeys":["EnumerationIteratorInt","fun EnumerationIteratorInt(enumeration: Enumeration<Int>)","fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt"]},{"name":"fun EnumerationIteratorInt(iterator: Iterator<Int>)","description":"fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/-enumeration-iterator-int.html","searchKeys":["EnumerationIteratorInt","fun EnumerationIteratorInt(iterator: Iterator<Int>)","fr.jhelp.lists.EnumerationIteratorInt.EnumerationIteratorInt"]},{"name":"fun NaturalComparator()","description":"fr.jhelp.lists.NaturalComparator.NaturalComparator","location":"lists/fr.jhelp.lists/-natural-comparator/-natural-comparator.html","searchKeys":["NaturalComparator","fun NaturalComparator()","fr.jhelp.lists.NaturalComparator.NaturalComparator"]},{"name":"fun Queue()","description":"fr.jhelp.lists.Queue.Queue","location":"lists/fr.jhelp.lists/-queue/-queue.html","searchKeys":["Queue","fun Queue()","fr.jhelp.lists.Queue.Queue"]},{"name":"fun SortedArray(comparator: Comparator<T>, unique: Boolean = false)","description":"fr.jhelp.lists.SortedArray.SortedArray","location":"lists/fr.jhelp.lists/-sorted-array/-sorted-array.html","searchKeys":["SortedArray","fun SortedArray(comparator: Comparator<T>, unique: Boolean = false)","fr.jhelp.lists.SortedArray.SortedArray"]},{"name":"fun add(branch: BTree<T>)","description":"fr.jhelp.lists.BTree.add","location":"lists/fr.jhelp.lists/-b-tree/add.html","searchKeys":["add","fun add(branch: BTree<T>)","fr.jhelp.lists.BTree.add"]},{"name":"fun add(element: T)","description":"fr.jhelp.lists.BTree.add","location":"lists/fr.jhelp.lists/-b-tree/add.html","searchKeys":["add","fun add(element: T)","fr.jhelp.lists.BTree.add"]},{"name":"fun add(element: T): Boolean","description":"fr.jhelp.lists.SortedArray.add","location":"lists/fr.jhelp.lists/-sorted-array/add.html","searchKeys":["add","fun add(element: T): Boolean","fr.jhelp.lists.SortedArray.add"]},{"name":"fun add(integer: Int)","description":"fr.jhelp.lists.ArrayInt.add","location":"lists/fr.jhelp.lists/-array-int/add.html","searchKeys":["add","fun add(integer: Int)","fr.jhelp.lists.ArrayInt.add"]},{"name":"fun addAll(arrayInt: ArrayInt)","description":"fr.jhelp.lists.ArrayInt.addAll","location":"lists/fr.jhelp.lists/-array-int/add-all.html","searchKeys":["addAll","fun addAll(arrayInt: ArrayInt)","fr.jhelp.lists.ArrayInt.addAll"]},{"name":"fun addAll(iterable: Iterable<T>)","description":"fr.jhelp.lists.BTree.addAll","location":"lists/fr.jhelp.lists/-b-tree/add-all.html","searchKeys":["addAll","fun addAll(iterable: Iterable<T>)","fr.jhelp.lists.BTree.addAll"]},{"name":"fun addAll(iterable: Iterable<T>)","description":"fr.jhelp.lists.SortedArray.addAll","location":"lists/fr.jhelp.lists/-sorted-array/add-all.html","searchKeys":["addAll","fun addAll(iterable: Iterable<T>)","fr.jhelp.lists.SortedArray.addAll"]},{"name":"fun ahead(element: T)","description":"fr.jhelp.lists.Queue.ahead","location":"lists/fr.jhelp.lists/-queue/ahead.html","searchKeys":["ahead","fun ahead(element: T)","fr.jhelp.lists.Queue.ahead"]},{"name":"fun ahead(element: T): LinkedArray<T>","description":"fr.jhelp.lists.LinkedArray.ahead","location":"lists/fr.jhelp.lists/-linked-array/ahead.html","searchKeys":["ahead","fun ahead(element: T): LinkedArray<T>","fr.jhelp.lists.LinkedArray.ahead"]},{"name":"fun clear()","description":"fr.jhelp.lists.ArrayInt.clear","location":"lists/fr.jhelp.lists/-array-int/clear.html","searchKeys":["clear","fun clear()","fr.jhelp.lists.ArrayInt.clear"]},{"name":"fun clear()","description":"fr.jhelp.lists.BTree.clear","location":"lists/fr.jhelp.lists/-b-tree/clear.html","searchKeys":["clear","fun clear()","fr.jhelp.lists.BTree.clear"]},{"name":"fun clear()","description":"fr.jhelp.lists.ComparableMap.clear","location":"lists/fr.jhelp.lists/-comparable-map/clear.html","searchKeys":["clear","fun clear()","fr.jhelp.lists.ComparableMap.clear"]},{"name":"fun clear()","description":"fr.jhelp.lists.Queue.clear","location":"lists/fr.jhelp.lists/-queue/clear.html","searchKeys":["clear","fun clear()","fr.jhelp.lists.Queue.clear"]},{"name":"fun clear()","description":"fr.jhelp.lists.SortedArray.clear","location":"lists/fr.jhelp.lists/-sorted-array/clear.html","searchKeys":["clear","fun clear()","fr.jhelp.lists.SortedArray.clear"]},{"name":"fun collectLeftRight(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectLeftRight","location":"lists/fr.jhelp.lists/-b-tree/collect-left-right.html","searchKeys":["collectLeftRight","fun collectLeftRight(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectLeftRight"]},{"name":"fun collectLeftRightDeep(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectLeftRightDeep","location":"lists/fr.jhelp.lists/-b-tree/collect-left-right-deep.html","searchKeys":["collectLeftRightDeep","fun collectLeftRightDeep(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectLeftRightDeep"]},{"name":"fun collectLeftRightHead(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectLeftRightHead","location":"lists/fr.jhelp.lists/-b-tree/collect-left-right-head.html","searchKeys":["collectLeftRightHead","fun collectLeftRightHead(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectLeftRightHead"]},{"name":"fun collectRightLeft(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectRightLeft","location":"lists/fr.jhelp.lists/-b-tree/collect-right-left.html","searchKeys":["collectRightLeft","fun collectRightLeft(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectRightLeft"]},{"name":"fun collectRightLeftDeep(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectRightLeftDeep","location":"lists/fr.jhelp.lists/-b-tree/collect-right-left-deep.html","searchKeys":["collectRightLeftDeep","fun collectRightLeftDeep(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectRightLeftDeep"]},{"name":"fun collectRightLeftHead(condition: (T) -> Boolean, collector: (T) -> Unit)","description":"fr.jhelp.lists.BTree.collectRightLeftHead","location":"lists/fr.jhelp.lists/-b-tree/collect-right-left-head.html","searchKeys":["collectRightLeftHead","fun collectRightLeftHead(condition: (T) -> Boolean, collector: (T) -> Unit)","fr.jhelp.lists.BTree.collectRightLeftHead"]},{"name":"fun compact(): String","description":"fr.jhelp.lists.BTree.compact","location":"lists/fr.jhelp.lists/-b-tree/compact.html","searchKeys":["compact","fun compact(): String","fr.jhelp.lists.BTree.compact"]},{"name":"fun containsAll(iterable: Iterable<T>): Boolean","description":"fr.jhelp.lists.SortedArray.containsAll","location":"lists/fr.jhelp.lists/-sorted-array/contains-all.html","searchKeys":["containsAll","fun containsAll(iterable: Iterable<T>): Boolean","fr.jhelp.lists.SortedArray.containsAll"]},{"name":"fun containsSupposeSorted(integer: Int): Boolean","description":"fr.jhelp.lists.ArrayInt.containsSupposeSorted","location":"lists/fr.jhelp.lists/-array-int/contains-suppose-sorted.html","searchKeys":["containsSupposeSorted","fun containsSupposeSorted(integer: Int): Boolean","fr.jhelp.lists.ArrayInt.containsSupposeSorted"]},{"name":"fun copy(): ArrayInt","description":"fr.jhelp.lists.ArrayInt.copy","location":"lists/fr.jhelp.lists/-array-int/copy.html","searchKeys":["copy","fun copy(): ArrayInt","fr.jhelp.lists.ArrayInt.copy"]},{"name":"fun dequeue(): T","description":"fr.jhelp.lists.Queue.dequeue","location":"lists/fr.jhelp.lists/-queue/dequeue.html","searchKeys":["dequeue","fun dequeue(): T","fr.jhelp.lists.Queue.dequeue"]},{"name":"fun enqueue(element: T)","description":"fr.jhelp.lists.Queue.enqueue","location":"lists/fr.jhelp.lists/-queue/enqueue.html","searchKeys":["enqueue","fun enqueue(element: T)","fr.jhelp.lists.Queue.enqueue"]},{"name":"fun getOrPut(key: K, creator: () -> V): V","description":"fr.jhelp.lists.ComparableMap.getOrPut","location":"lists/fr.jhelp.lists/-comparable-map/get-or-put.html","searchKeys":["getOrPut","fun getOrPut(key: K, creator: () -> V): V","fr.jhelp.lists.ComparableMap.getOrPut"]},{"name":"fun head(): T","description":"fr.jhelp.lists.LinkedArray.head","location":"lists/fr.jhelp.lists/-linked-array/head.html","searchKeys":["head","fun head(): T","fr.jhelp.lists.LinkedArray.head"]},{"name":"fun headValue(): T","description":"fr.jhelp.lists.BTree.headValue","location":"lists/fr.jhelp.lists/-b-tree/head-value.html","searchKeys":["headValue","fun headValue(): T","fr.jhelp.lists.BTree.headValue"]},{"name":"fun index(integer: Int): Int","description":"fr.jhelp.lists.ArrayInt.index","location":"lists/fr.jhelp.lists/-array-int/--index--.html","searchKeys":["index","fun index(integer: Int): Int","fr.jhelp.lists.ArrayInt.index"]},{"name":"fun indexOf(element: T): Int","description":"fr.jhelp.lists.SortedArray.indexOf","location":"lists/fr.jhelp.lists/-sorted-array/index-of.html","searchKeys":["indexOf","fun indexOf(element: T): Int","fr.jhelp.lists.SortedArray.indexOf"]},{"name":"fun indexSupposeSorted(integer: Int): Int","description":"fr.jhelp.lists.ArrayInt.indexSupposeSorted","location":"lists/fr.jhelp.lists/-array-int/index-suppose-sorted.html","searchKeys":["indexSupposeSorted","fun indexSupposeSorted(integer: Int): Int","fr.jhelp.lists.ArrayInt.indexSupposeSorted"]},{"name":"fun insert(integer: Int, index: Int)","description":"fr.jhelp.lists.ArrayInt.insert","location":"lists/fr.jhelp.lists/-array-int/insert.html","searchKeys":["insert","fun insert(integer: Int, index: Int)","fr.jhelp.lists.ArrayInt.insert"]},{"name":"fun iteratorInt(): EnumerationIteratorInt","description":"fr.jhelp.lists.ArrayInt.iteratorInt","location":"lists/fr.jhelp.lists/-array-int/iterator-int.html","searchKeys":["iteratorInt","fun iteratorInt(): EnumerationIteratorInt","fr.jhelp.lists.ArrayInt.iteratorInt"]},{"name":"fun keys(): Iterable<K>","description":"fr.jhelp.lists.ComparableMap.keys","location":"lists/fr.jhelp.lists/-comparable-map/keys.html","searchKeys":["keys","fun keys(): Iterable<K>","fr.jhelp.lists.ComparableMap.keys"]},{"name":"fun leftBranch(): BTree<T>","description":"fr.jhelp.lists.BTree.leftBranch","location":"lists/fr.jhelp.lists/-b-tree/left-branch.html","searchKeys":["leftBranch","fun leftBranch(): BTree<T>","fr.jhelp.lists.BTree.leftBranch"]},{"name":"fun peek(): T","description":"fr.jhelp.lists.Queue.peek","location":"lists/fr.jhelp.lists/-queue/peek.html","searchKeys":["peek","fun peek(): T","fr.jhelp.lists.Queue.peek"]},{"name":"fun put(key: K, value: V)","description":"fr.jhelp.lists.ComparableMap.put","location":"lists/fr.jhelp.lists/-comparable-map/put.html","searchKeys":["put","fun put(key: K, value: V)","fr.jhelp.lists.ComparableMap.put"]},{"name":"fun queue(): LinkedArray<T>","description":"fr.jhelp.lists.LinkedArray.queue","location":"lists/fr.jhelp.lists/-linked-array/queue.html","searchKeys":["queue","fun queue(): LinkedArray<T>","fr.jhelp.lists.LinkedArray.queue"]},{"name":"fun remove(element: T): Boolean","description":"fr.jhelp.lists.SortedArray.remove","location":"lists/fr.jhelp.lists/-sorted-array/remove.html","searchKeys":["remove","fun remove(element: T): Boolean","fr.jhelp.lists.SortedArray.remove"]},{"name":"fun remove(index: Int)","description":"fr.jhelp.lists.ArrayInt.remove","location":"lists/fr.jhelp.lists/-array-int/remove.html","searchKeys":["remove","fun remove(index: Int)","fr.jhelp.lists.ArrayInt.remove"]},{"name":"fun remove(key: K): V?","description":"fr.jhelp.lists.ComparableMap.remove","location":"lists/fr.jhelp.lists/-comparable-map/remove.html","searchKeys":["remove","fun remove(key: K): V?","fr.jhelp.lists.ComparableMap.remove"]},{"name":"fun removeAt(index: Int): T","description":"fr.jhelp.lists.SortedArray.removeAt","location":"lists/fr.jhelp.lists/-sorted-array/remove-at.html","searchKeys":["removeAt","fun removeAt(index: Int): T","fr.jhelp.lists.SortedArray.removeAt"]},{"name":"fun removeIf(condition: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.removeIf","location":"lists/fr.jhelp.lists/-b-tree/remove-if.html","searchKeys":["removeIf","fun removeIf(condition: (T) -> Boolean)","fr.jhelp.lists.BTree.removeIf"]},{"name":"fun removeIf(condition: (T) -> Boolean)","description":"fr.jhelp.lists.Queue.removeIf","location":"lists/fr.jhelp.lists/-queue/remove-if.html","searchKeys":["removeIf","fun removeIf(condition: (T) -> Boolean)","fr.jhelp.lists.Queue.removeIf"]},{"name":"fun removeIf(condition: (T) -> Boolean)","description":"fr.jhelp.lists.SortedArray.removeIf","location":"lists/fr.jhelp.lists/-sorted-array/remove-if.html","searchKeys":["removeIf","fun removeIf(condition: (T) -> Boolean)","fr.jhelp.lists.SortedArray.removeIf"]},{"name":"fun rightBranch(): BTree<T>","description":"fr.jhelp.lists.BTree.rightBranch","location":"lists/fr.jhelp.lists/-b-tree/right-branch.html","searchKeys":["rightBranch","fun rightBranch(): BTree<T>","fr.jhelp.lists.BTree.rightBranch"]},{"name":"fun search(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.Queue.search","location":"lists/fr.jhelp.lists/-queue/search.html","searchKeys":["search","fun search(condition: (T) -> Boolean): T?","fr.jhelp.lists.Queue.search"]},{"name":"fun searchLeftRight(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchLeftRight","location":"lists/fr.jhelp.lists/-b-tree/search-left-right.html","searchKeys":["searchLeftRight","fun searchLeftRight(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchLeftRight"]},{"name":"fun searchLeftRightDeep(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchLeftRightDeep","location":"lists/fr.jhelp.lists/-b-tree/search-left-right-deep.html","searchKeys":["searchLeftRightDeep","fun searchLeftRightDeep(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchLeftRightDeep"]},{"name":"fun searchLeftRightHead(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchLeftRightHead","location":"lists/fr.jhelp.lists/-b-tree/search-left-right-head.html","searchKeys":["searchLeftRightHead","fun searchLeftRightHead(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchLeftRightHead"]},{"name":"fun searchRightLeft(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchRightLeft","location":"lists/fr.jhelp.lists/-b-tree/search-right-left.html","searchKeys":["searchRightLeft","fun searchRightLeft(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchRightLeft"]},{"name":"fun searchRightLeftDeep(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchRightLeftDeep","location":"lists/fr.jhelp.lists/-b-tree/search-right-left-deep.html","searchKeys":["searchRightLeftDeep","fun searchRightLeftDeep(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchRightLeftDeep"]},{"name":"fun searchRightLeftHead(condition: (T) -> Boolean): T?","description":"fr.jhelp.lists.BTree.searchRightLeftHead","location":"lists/fr.jhelp.lists/-b-tree/search-right-left-head.html","searchKeys":["searchRightLeftHead","fun searchRightLeftHead(condition: (T) -> Boolean): T?","fr.jhelp.lists.BTree.searchRightLeftHead"]},{"name":"fun sort()","description":"fr.jhelp.lists.ArrayInt.sort","location":"lists/fr.jhelp.lists/-array-int/sort.html","searchKeys":["sort","fun sort()","fr.jhelp.lists.ArrayInt.sort"]},{"name":"fun sortUnique()","description":"fr.jhelp.lists.ArrayInt.sortUnique","location":"lists/fr.jhelp.lists/-array-int/sort-unique.html","searchKeys":["sortUnique","fun sortUnique()","fr.jhelp.lists.ArrayInt.sortUnique"]},{"name":"fun sortedSlow(): Boolean","description":"fr.jhelp.lists.ArrayInt.sortedSlow","location":"lists/fr.jhelp.lists/-array-int/sorted-slow.html","searchKeys":["sortedSlow","fun sortedSlow(): Boolean","fr.jhelp.lists.ArrayInt.sortedSlow"]},{"name":"fun toArray(): IntArray","description":"fr.jhelp.lists.ArrayInt.toArray","location":"lists/fr.jhelp.lists/-array-int/to-array.html","searchKeys":["toArray","fun toArray(): IntArray","fr.jhelp.lists.ArrayInt.toArray"]},{"name":"fun values(): Iterable<V>","description":"fr.jhelp.lists.ComparableMap.values","location":"lists/fr.jhelp.lists/-comparable-map/values.html","searchKeys":["values","fun values(): Iterable<V>","fr.jhelp.lists.ComparableMap.values"]},{"name":"fun visitLeftRight(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitLeftRight","location":"lists/fr.jhelp.lists/-b-tree/visit-left-right.html","searchKeys":["visitLeftRight","fun visitLeftRight(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitLeftRight"]},{"name":"fun visitLeftRightDeep(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitLeftRightDeep","location":"lists/fr.jhelp.lists/-b-tree/visit-left-right-deep.html","searchKeys":["visitLeftRightDeep","fun visitLeftRightDeep(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitLeftRightDeep"]},{"name":"fun visitLeftRightHead(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitLeftRightHead","location":"lists/fr.jhelp.lists/-b-tree/visit-left-right-head.html","searchKeys":["visitLeftRightHead","fun visitLeftRightHead(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitLeftRightHead"]},{"name":"fun visitRightLeft(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitRightLeft","location":"lists/fr.jhelp.lists/-b-tree/visit-right-left.html","searchKeys":["visitRightLeft","fun visitRightLeft(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitRightLeft"]},{"name":"fun visitRightLeftDeep(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitRightLeftDeep","location":"lists/fr.jhelp.lists/-b-tree/visit-right-left-deep.html","searchKeys":["visitRightLeftDeep","fun visitRightLeftDeep(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitRightLeftDeep"]},{"name":"fun visitRightLeftHead(visitor: (T) -> Boolean)","description":"fr.jhelp.lists.BTree.visitRightLeftHead","location":"lists/fr.jhelp.lists/-b-tree/visit-right-left-head.html","searchKeys":["visitRightLeftHead","fun visitRightLeftHead(visitor: (T) -> Boolean)","fr.jhelp.lists.BTree.visitRightLeftHead"]},{"name":"infix fun <T> (T) -> Boolean.and(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.and","location":"lists/fr.jhelp.lists/and.html","searchKeys":["and","infix fun <T> (T) -> Boolean.and(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.and"]},{"name":"infix fun <T> (T) -> Boolean.and(other: Boolean): (T) -> Boolean","description":"fr.jhelp.lists.and","location":"lists/fr.jhelp.lists/and.html","searchKeys":["and","infix fun <T> (T) -> Boolean.and(other: Boolean): (T) -> Boolean","fr.jhelp.lists.and"]},{"name":"infix fun <T> (T) -> Boolean.or(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.or","location":"lists/fr.jhelp.lists/or.html","searchKeys":["or","infix fun <T> (T) -> Boolean.or(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.or"]},{"name":"infix fun <T> (T) -> Boolean.or(other: Boolean): (T) -> Boolean","description":"fr.jhelp.lists.or","location":"lists/fr.jhelp.lists/or.html","searchKeys":["or","infix fun <T> (T) -> Boolean.or(other: Boolean): (T) -> Boolean","fr.jhelp.lists.or"]},{"name":"infix fun <T> (T) -> Boolean.xor(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.xor","location":"lists/fr.jhelp.lists/xor.html","searchKeys":["xor","infix fun <T> (T) -> Boolean.xor(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.xor"]},{"name":"infix fun <T> (T) -> Boolean.xor(other: Boolean): (T) -> Boolean","description":"fr.jhelp.lists.xor","location":"lists/fr.jhelp.lists/xor.html","searchKeys":["xor","infix fun <T> (T) -> Boolean.xor(other: Boolean): (T) -> Boolean","fr.jhelp.lists.xor"]},{"name":"infix fun <T> Boolean.and(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.and","location":"lists/fr.jhelp.lists/and.html","searchKeys":["and","infix fun <T> Boolean.and(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.and"]},{"name":"infix fun <T> Boolean.or(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.or","location":"lists/fr.jhelp.lists/or.html","searchKeys":["or","infix fun <T> Boolean.or(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.or"]},{"name":"infix fun <T> Boolean.xor(other: (T) -> Boolean): (T) -> Boolean","description":"fr.jhelp.lists.xor","location":"lists/fr.jhelp.lists/xor.html","searchKeys":["xor","infix fun <T> Boolean.xor(other: (T) -> Boolean): (T) -> Boolean","fr.jhelp.lists.xor"]},{"name":"infix fun <T> T.U(array: LinkedArray<T>): LinkedArray<T>","description":"fr.jhelp.lists.U","location":"lists/fr.jhelp.lists/-u.html","searchKeys":["U","infix fun <T> T.U(array: LinkedArray<T>): LinkedArray<T>","fr.jhelp.lists.U"]},{"name":"infix fun U(array: LinkedArray<T>): LinkedArray<T>","description":"fr.jhelp.lists.LinkedArray.U","location":"lists/fr.jhelp.lists/-linked-array/-u.html","searchKeys":["U","infix fun U(array: LinkedArray<T>): LinkedArray<T>","fr.jhelp.lists.LinkedArray.U"]},{"name":"infix fun U(element: T): LinkedArray<T>","description":"fr.jhelp.lists.LinkedArray.U","location":"lists/fr.jhelp.lists/-linked-array/-u.html","searchKeys":["U","infix fun U(element: T): LinkedArray<T>","fr.jhelp.lists.LinkedArray.U"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"fr.jhelp.lists.LinkedArray.equals","location":"lists/fr.jhelp.lists/-linked-array/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","fr.jhelp.lists.LinkedArray.equals"]},{"name":"open operator override fun hasNext(): Boolean","description":"fr.jhelp.lists.EnumerationIteratorInt.hasNext","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","fr.jhelp.lists.EnumerationIteratorInt.hasNext"]},{"name":"open operator override fun hasNext(): Boolean","description":"fr.jhelp.lists.FilteredIterator.hasNext","location":"lists/fr.jhelp.lists/-filtered-iterator/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","fr.jhelp.lists.FilteredIterator.hasNext"]},{"name":"open operator override fun hasNext(): Boolean","description":"fr.jhelp.lists.TransformedIterator.hasNext","location":"lists/fr.jhelp.lists/-transformed-iterator/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","fr.jhelp.lists.TransformedIterator.hasNext"]},{"name":"open operator override fun iterator(): EnumerationIteratorInt","description":"fr.jhelp.lists.ArrayInt.iterator","location":"lists/fr.jhelp.lists/-array-int/iterator.html","searchKeys":["iterator","open operator override fun iterator(): EnumerationIteratorInt","fr.jhelp.lists.ArrayInt.iterator"]},{"name":"open operator override fun iterator(): Iterator<Pair<K, V>>","description":"fr.jhelp.lists.ComparableMap.iterator","location":"lists/fr.jhelp.lists/-comparable-map/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Pair<K, V>>","fr.jhelp.lists.ComparableMap.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"fr.jhelp.lists.FilteredIterable.iterator","location":"lists/fr.jhelp.lists/-filtered-iterable/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","fr.jhelp.lists.FilteredIterable.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"fr.jhelp.lists.Queue.iterator","location":"lists/fr.jhelp.lists/-queue/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","fr.jhelp.lists.Queue.iterator"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"fr.jhelp.lists.SortedArray.iterator","location":"lists/fr.jhelp.lists/-sorted-array/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","fr.jhelp.lists.SortedArray.iterator"]},{"name":"open operator override fun iterator(): TransformedIterator<P, R>","description":"fr.jhelp.lists.TransformedIterable.iterator","location":"lists/fr.jhelp.lists/-transformed-iterable/iterator.html","searchKeys":["iterator","open operator override fun iterator(): TransformedIterator<P, R>","fr.jhelp.lists.TransformedIterable.iterator"]},{"name":"open operator override fun next(): Int","description":"fr.jhelp.lists.EnumerationIteratorInt.next","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/next.html","searchKeys":["next","open operator override fun next(): Int","fr.jhelp.lists.EnumerationIteratorInt.next"]},{"name":"open operator override fun next(): R","description":"fr.jhelp.lists.TransformedIterator.next","location":"lists/fr.jhelp.lists/-transformed-iterator/next.html","searchKeys":["next","open operator override fun next(): R","fr.jhelp.lists.TransformedIterator.next"]},{"name":"open operator override fun next(): T","description":"fr.jhelp.lists.FilteredIterator.next","location":"lists/fr.jhelp.lists/-filtered-iterator/next.html","searchKeys":["next","open operator override fun next(): T","fr.jhelp.lists.FilteredIterator.next"]},{"name":"open override fun compare(comparable1: C, comparable2: C): Int","description":"fr.jhelp.lists.NaturalComparator.compare","location":"lists/fr.jhelp.lists/-natural-comparator/compare.html","searchKeys":["compare","open override fun compare(comparable1: C, comparable2: C): Int","fr.jhelp.lists.NaturalComparator.compare"]},{"name":"open override fun hasMoreElements(): Boolean","description":"fr.jhelp.lists.EnumerationIteratorInt.hasMoreElements","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/has-more-elements.html","searchKeys":["hasMoreElements","open override fun hasMoreElements(): Boolean","fr.jhelp.lists.EnumerationIteratorInt.hasMoreElements"]},{"name":"open override fun hashCode(): Int","description":"fr.jhelp.lists.LinkedArray.hashCode","location":"lists/fr.jhelp.lists/-linked-array/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","fr.jhelp.lists.LinkedArray.hashCode"]},{"name":"open override fun nextElement(): Int","description":"fr.jhelp.lists.EnumerationIteratorInt.nextElement","location":"lists/fr.jhelp.lists/-enumeration-iterator-int/next-element.html","searchKeys":["nextElement","open override fun nextElement(): Int","fr.jhelp.lists.EnumerationIteratorInt.nextElement"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.ArrayInt.toString","location":"lists/fr.jhelp.lists/-array-int/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.ArrayInt.toString"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.BTree.toString","location":"lists/fr.jhelp.lists/-b-tree/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.BTree.toString"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.ComparableMap.toString","location":"lists/fr.jhelp.lists/-comparable-map/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.ComparableMap.toString"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.LinkedArray.toString","location":"lists/fr.jhelp.lists/-linked-array/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.LinkedArray.toString"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.Queue.toString","location":"lists/fr.jhelp.lists/-queue/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.Queue.toString"]},{"name":"open override fun toString(): String","description":"fr.jhelp.lists.SortedArray.toString","location":"lists/fr.jhelp.lists/-sorted-array/to-string.html","searchKeys":["toString","open override fun toString(): String","fr.jhelp.lists.SortedArray.toString"]},{"name":"operator fun contains(element: T): Boolean","description":"fr.jhelp.lists.SortedArray.contains","location":"lists/fr.jhelp.lists/-sorted-array/contains.html","searchKeys":["contains","operator fun contains(element: T): Boolean","fr.jhelp.lists.SortedArray.contains"]},{"name":"operator fun contains(integer: Int): Boolean","description":"fr.jhelp.lists.ArrayInt.contains","location":"lists/fr.jhelp.lists/-array-int/contains.html","searchKeys":["contains","operator fun contains(integer: Int): Boolean","fr.jhelp.lists.ArrayInt.contains"]},{"name":"operator fun contains(key: K): Boolean","description":"fr.jhelp.lists.ComparableMap.contains","location":"lists/fr.jhelp.lists/-comparable-map/contains.html","searchKeys":["contains","operator fun contains(key: K): Boolean","fr.jhelp.lists.ComparableMap.contains"]},{"name":"operator fun get(index: Int): Int","description":"fr.jhelp.lists.ArrayInt.get","location":"lists/fr.jhelp.lists/-array-int/get.html","searchKeys":["get","operator fun get(index: Int): Int","fr.jhelp.lists.ArrayInt.get"]},{"name":"operator fun get(index: Int): T","description":"fr.jhelp.lists.SortedArray.get","location":"lists/fr.jhelp.lists/-sorted-array/get.html","searchKeys":["get","operator fun get(index: Int): T","fr.jhelp.lists.SortedArray.get"]},{"name":"operator fun get(key: K): V?","description":"fr.jhelp.lists.ComparableMap.get","location":"lists/fr.jhelp.lists/-comparable-map/get.html","searchKeys":["get","operator fun get(key: K): V?","fr.jhelp.lists.ComparableMap.get"]},{"name":"operator fun plusAssign(arrayInt: ArrayInt)","description":"fr.jhelp.lists.ArrayInt.plusAssign","location":"lists/fr.jhelp.lists/-array-int/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(arrayInt: ArrayInt)","fr.jhelp.lists.ArrayInt.plusAssign"]},{"name":"operator fun plusAssign(integer: Int)","description":"fr.jhelp.lists.ArrayInt.plusAssign","location":"lists/fr.jhelp.lists/-array-int/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(integer: Int)","fr.jhelp.lists.ArrayInt.plusAssign"]},{"name":"operator fun set(index: Int, integer: Int)","description":"fr.jhelp.lists.ArrayInt.set","location":"lists/fr.jhelp.lists/-array-int/set.html","searchKeys":["set","operator fun set(index: Int, integer: Int)","fr.jhelp.lists.ArrayInt.set"]},{"name":"operator fun set(key: K, value: V)","description":"fr.jhelp.lists.ComparableMap.set","location":"lists/fr.jhelp.lists/-comparable-map/set.html","searchKeys":["set","operator fun set(key: K, value: V)","fr.jhelp.lists.ComparableMap.set"]},{"name":"val <T> (T) -> Boolean.not: (T) -> Boolean","description":"fr.jhelp.lists.not","location":"lists/fr.jhelp.lists/not.html","searchKeys":["not","val <T> (T) -> Boolean.not: (T) -> Boolean","fr.jhelp.lists.not"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.ArrayInt.empty","location":"lists/fr.jhelp.lists/-array-int/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.ArrayInt.empty"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.BTree.empty","location":"lists/fr.jhelp.lists/-b-tree/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.BTree.empty"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.ComparableMap.empty","location":"lists/fr.jhelp.lists/-comparable-map/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.ComparableMap.empty"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.LinkedArray.empty","location":"lists/fr.jhelp.lists/-linked-array/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.LinkedArray.empty"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.Queue.empty","location":"lists/fr.jhelp.lists/-queue/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.Queue.empty"]},{"name":"val empty: Boolean","description":"fr.jhelp.lists.SortedArray.empty","location":"lists/fr.jhelp.lists/-sorted-array/empty.html","searchKeys":["empty","val empty: Boolean","fr.jhelp.lists.SortedArray.empty"]},{"name":"val notEmpty: Boolean","description":"fr.jhelp.lists.BTree.notEmpty","location":"lists/fr.jhelp.lists/-b-tree/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","fr.jhelp.lists.BTree.notEmpty"]},{"name":"val notEmpty: Boolean","description":"fr.jhelp.lists.ComparableMap.notEmpty","location":"lists/fr.jhelp.lists/-comparable-map/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","fr.jhelp.lists.ComparableMap.notEmpty"]},{"name":"val notEmpty: Boolean","description":"fr.jhelp.lists.LinkedArray.notEmpty","location":"lists/fr.jhelp.lists/-linked-array/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","fr.jhelp.lists.LinkedArray.notEmpty"]},{"name":"val notEmpty: Boolean","description":"fr.jhelp.lists.Queue.notEmpty","location":"lists/fr.jhelp.lists/-queue/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","fr.jhelp.lists.Queue.notEmpty"]},{"name":"val notEmpty: Boolean","description":"fr.jhelp.lists.SortedArray.notEmpty","location":"lists/fr.jhelp.lists/-sorted-array/not-empty.html","searchKeys":["notEmpty","val notEmpty: Boolean","fr.jhelp.lists.SortedArray.notEmpty"]},{"name":"val size: Int","description":"fr.jhelp.lists.BTree.size","location":"lists/fr.jhelp.lists/-b-tree/size.html","searchKeys":["size","val size: Int","fr.jhelp.lists.BTree.size"]},{"name":"val size: Int","description":"fr.jhelp.lists.ComparableMap.size","location":"lists/fr.jhelp.lists/-comparable-map/size.html","searchKeys":["size","val size: Int","fr.jhelp.lists.ComparableMap.size"]},{"name":"val size: Int","description":"fr.jhelp.lists.LinkedArray.size","location":"lists/fr.jhelp.lists/-linked-array/size.html","searchKeys":["size","val size: Int","fr.jhelp.lists.LinkedArray.size"]},{"name":"val size: Int","description":"fr.jhelp.lists.SortedArray.size","location":"lists/fr.jhelp.lists/-sorted-array/size.html","searchKeys":["size","val size: Int","fr.jhelp.lists.SortedArray.size"]},{"name":"val unique: Boolean = false","description":"fr.jhelp.lists.SortedArray.unique","location":"lists/fr.jhelp.lists/-sorted-array/unique.html","searchKeys":["unique","val unique: Boolean = false","fr.jhelp.lists.SortedArray.unique"]},{"name":"var size: Int = 0","description":"fr.jhelp.lists.ArrayInt.size","location":"lists/fr.jhelp.lists/-array-int/size.html","searchKeys":["size","var size: Int = 0","fr.jhelp.lists.ArrayInt.size"]},{"name":"var size: Int = 0","description":"fr.jhelp.lists.Queue.size","location":"lists/fr.jhelp.lists/-queue/size.html","searchKeys":["size","var size: Int = 0","fr.jhelp.lists.Queue.size"]},{"name":"var sorted: Boolean = true","description":"fr.jhelp.lists.ArrayInt.sorted","location":"lists/fr.jhelp.lists/-array-int/sorted.html","searchKeys":["sorted","var sorted: Boolean = true","fr.jhelp.lists.ArrayInt.sorted"]}]
