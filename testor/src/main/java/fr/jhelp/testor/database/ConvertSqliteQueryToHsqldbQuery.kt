/*
 *  <h1>License :</h1> <br/>
 * The following code is deliver as is. <br/>
 *  You can use, modify, the code as your need for any usage.<br/>
 *  But you can't do any action that avoid me or other person use, modify this code.<br/>
 *  The code is free for usage and modification, you can't change that fact.
 */

package fr.jhelp.testor.database

import java.util.regex.Pattern

private fun pattern(pattern: String) = Pattern.compile(pattern, Pattern.CASE_INSENSITIVE)

private val convertList: Array<Pair<Pattern, String>> =
    arrayOf(
        // INTEGER PRIMARY KEY AUTOINCREMENT
        //  =>
        // INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY
        pattern("INTEGER\\s+PRIMARY\\s+KEY\\s+AUTOINCREMENT") to
                "INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY",
        // <name> TEXT
        // =>
        // <name> VARCHAR(8192)
        pattern("([A-Za-z][A-Za-z0-9_]+)\\s+TEXT") to
                "$1 VARCHAR(8192)",
        // <name> INTEGER
        // =>
        // <name> BIGINT
        pattern("([A-Za-z][A-Za-z0-9_]+)\\s+INTEGER") to
                "$1 BIGINT",
        // <name> NUMBER
        // =>
        // <name> DOUBLE
        pattern("([A-Za-z][A-Za-z0-9_]+)\\s+NUMBER") to
                "$1 DOUBLE"
           )

fun convertSqliteToHsql(sqliteQuery: String): String
{
    var hsqlQuery = sqliteQuery

    for ((pattern, replacement) in convertList)
    {
        hsqlQuery = pattern.matcher(hsqlQuery).replaceAll(replacement)
    }

    return hsqlQuery
}
